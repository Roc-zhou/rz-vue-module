!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("rz-vue-module",[],t):"object"==typeof exports?exports["rz-vue-module"]=t():n["rz-vue-module"]=t()}(window,function(){return function(n){var t={};function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:r})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(r,i,function(t){return n[t]}.bind(null,i));return r},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=5)}([function(n,t,e){var r=e(2);"string"==typeof r&&(r=[[n.i,r,""]]);var i={insert:"head",singleton:!1};e(4)(r,i);r.locals&&(n.exports=r.locals)},function(n,t,e){"use strict";var r=e(0);e.n(r).a},function(n,t,e){(n.exports=e(3)(!1)).push([n.i,"\n.items-center[data-v-0396c4c7] {\r\n  display: flex;\r\n  display: -webkit-flex;\r\n  -webkit-align-items: center;\r\n  align-items: center;\n}\n@media screen and (max-width: 755px) {\n.mo-paging[data-v-0396c4c7] {\r\n    display: inline-block;\r\n    padding: 0;\r\n    /* margin: 2em 0; */\r\n    font-size: 0;\r\n    list-style: none;\r\n    user-select: none;\n}\n.paging-item[data-v-0396c4c7] {\r\n    display: inline;\r\n    font-size: 0.390625rem /* 25/64 */;\r\n    position: relative;\r\n    padding: 0.15625rem /* 10/64 */ 0.234375rem /* 15/64 */;\r\n    text-decoration: none;\r\n    border: 1px solid #ccc;\r\n    background-color: #fff;\r\n    margin-left: -1px;\r\n    cursor: pointer;\n}\n.paging-item[data-v-0396c4c7]:first-child {\r\n    margin-left: 0;\n}\n.paging-item-disabled[data-v-0396c4c7],\r\n  .paging-item-more[data-v-0396c4c7] {\r\n    background-color: #fff;\r\n    color: #505050;\n}\n.paging-item-disabled[data-v-0396c4c7] {\r\n    cursor: not-allowed;\r\n    opacity: 0.75;\n}\n.paging-item-more[data-v-0396c4c7],\r\n  .paging-item-current[data-v-0396c4c7] {\r\n    cursor: default;\n}\r\n  /* 选中 */\n.paging-item-current[data-v-0396c4c7] {\r\n    background-color: #f2f2f2;\r\n    position: relative;\r\n    z-index: 1;\r\n    border-color: #ccc;\n}\n}\n@media screen and (min-width: 755px) {\n.mo-paging[data-v-0396c4c7] {\r\n    display: inline-block;\r\n    padding: 0;\r\n    font-size: 0;\r\n    list-style: none;\r\n    user-select: none;\n}\n.paging-item[data-v-0396c4c7] {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 32px;\r\n    height: 32px;\r\n    text-decoration: none;\r\n    border: 1px solid #e4e4e4;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    margin-left: -1px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #333333;\r\n    text-align: center;\r\n    line-height: 32px;\r\n    margin: 0 5px;\n}\n.paging-item[data-v-0396c4c7]:first-child {\r\n    margin-left: 0;\n}\n.paging-item[data-v-0396c4c7]:hover {\r\n    background-color: #333;\r\n    color: #fff;\n}\n.paging-item-disabled[data-v-0396c4c7],\r\n  .paging-item-more[data-v-0396c4c7] {\r\n    background-color: #fff;\r\n    color: #505050;\n}\n.paging-item-disabled[data-v-0396c4c7] {\r\n    cursor: not-allowed;\r\n    opacity: 0.75;\n}\n.paging-item-more[data-v-0396c4c7],\r\n  .paging-item-current[data-v-0396c4c7] {\r\n    cursor: default;\n}\r\n  /* 选中 */\n.paging-item-current[data-v-0396c4c7] {\r\n    background-color: #333;\r\n    color: #fff;\r\n    position: relative;\n}\n.one[data-v-0396c4c7] {\r\n    width: 75px;\n}\n.two[data-v-0396c4c7] {\r\n    width: 60px;\n}\n}\r\n",""])},function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map(function(t){var e=function(n,t){var e=n[1]||"",r=n[3];if(!r)return e;if(t&&"function"==typeof btoa){var i=(a=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(c," */")),o=r.sources.map(function(n){return"/*# sourceURL=".concat(r.sourceRoot).concat(n," */")});return[e].concat(o).concat([i]).join("\n")}var a,s,c;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2],"{").concat(e,"}"):e}).join("")},t.i=function(n,e){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];null!=o&&(r[o]=!0)}for(var a=0;a<n.length;a++){var s=n[a];null!=s[0]&&r[s[0]]||(e&&!s[2]?s[2]=e:e&&(s[2]="(".concat(s[2],") and (").concat(e,")")),t.push(s))}},t}},function(n,t,e){"use strict";var r,i={},o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}();function s(n,t){for(var e=[],r={},i=0;i<n.length;i++){var o=n[i],a=t.base?o[0]+t.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):e.push(r[a]={id:a,parts:[s]})}return e}function c(n,t){for(var e=0;e<n.length;e++){var r=n[e],o=i[r.id],a=0;if(o){for(o.refs++;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(v(r.parts[a],t))}else{for(var s=[];a<r.parts.length;a++)s.push(v(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:s}}}}function l(n){var t=document.createElement("style");if(void 0===n.attributes.nonce){var r=e.nc;r&&(n.attributes.nonce=r)}if(Object.keys(n.attributes).forEach(function(e){t.setAttribute(e,n.attributes[e])}),"function"==typeof n.insert)n.insert(t);else{var i=a(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var u,d=(u=[],function(n,t){return u[n]=t,u.filter(Boolean).join("\n")});function p(n,t,e,r){var i=e?"":r.css;if(n.styleSheet)n.styleSheet.cssText=d(t,i);else{var o=document.createTextNode(i),a=n.childNodes;a[t]&&n.removeChild(a[t]),a.length?n.insertBefore(o,a[t]):n.appendChild(o)}}function f(n,t,e){var r=e.css,i=e.media,o=e.sourceMap;if(i&&n.setAttribute("media",i),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var g=null,m=0;function v(n,t){var e,r,i;if(t.singleton){var o=m++;e=g||(g=l(t)),r=p.bind(null,e,o,!1),i=p.bind(null,e,o,!0)}else e=l(t),r=f.bind(null,e,t),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return r(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;r(n=t)}else i()}}n.exports=function(n,t){(t=t||{}).attributes="object"==typeof t.attributes?t.attributes:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o());var e=s(n,t);return c(e,t),function(n){for(var r=[],o=0;o<e.length;o++){var a=e[o],l=i[a.id];l&&(l.refs--,r.push(l))}n&&c(s(n,t),t);for(var u=0;u<r.length;u++){var d=r[u];if(0===d.refs){for(var p=0;p<d.parts.length;p++)d.parts[p]();delete i[d.id]}}}}},function(n,t,e){"use strict";e.r(t);var r={name:"rz-vue-page",props:{perPages:{type:Number,default:5},pageIndex:{type:Number,default:1},pageSize:{type:Number,default:10},total:{type:Number,default:20}},methods:{prev:function(){this.index>1&&(this.go(this.index-1),this.setScrollTop(0))},next:function(){this.index<this.pages&&(this.go(this.index+1),this.setScrollTop(0))},first:function(){1!==this.index&&(this.go(1),this.setScrollTop(0))},last:function(){this.index!=this.pages&&(this.go(this.pages),this.setScrollTop(0))},go:function(n){this.index!==n&&(this.index=n,this.$emit("change",this.index),this.setScrollTop(0))},setScrollTop:function(n){document.documentElement.scrollTop=n,window.pageYOffset=n,document.body.scrollTop=n},backTop:function(){this.setScrollTop(0)}},computed:{pages:function(){return Math.ceil(this.size/this.limit)},pagers:function(){var n=[],t=this.perPages,e=this.pages,r=this.index,i=(t-1)/2,o={start:r-i,end:r+i};o.start<1&&(o.end=o.end+(1-o.start),o.start=1),o.end>e&&(o.start=o.start-(o.end-e),o.end=e),o.start<1&&(o.start=1),this.showPrevMore=o.start>1,this.showNextMore=o.end<e;for(var a=o.start;a<=o.end;a++)n.push(a);return n}},data:function(){return{index:this.pageIndex,limit:this.pageSize,size:this.total||1,showPrevMore:!1,showNextMore:!1}},watch:{pageIndex:function(n){this.index=n||1},pageSize:function(n){this.limit=n||10},total:function(n){this.size=n||1}}};e(1);var i=function(n,t,e,r,i,o,a,s){var c,l="function"==typeof n?n.options:n;if(t&&(l.render=t,l.staticRenderFns=e,l._compiled=!0),r&&(l.functional=!0),o&&(l._scopeId="data-v-"+o),a?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),i&&i.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},l._ssrRegister=c):i&&(c=s?function(){i.call(this,this.$root.$options.shadowRoot)}:i),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(n,t){return c.call(t),u(n,t)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,c):[c]}return{exports:n,options:l}}(r,function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"paging"},[e("ul",{staticClass:"mo-paging"},[e("li",{class:["paging-item","paging-item--prev","items-center",{"paging-item-disabled":1===n.index},"one"],on:{click:function(t){return t.stopPropagation(),n.prev(t)}}},[n._v("上一页")]),n._v(" "),e("li",{class:["paging-item","paging-item--first","items-center",{"paging-item-disabled":1===n.index},"two"],on:{click:function(t){return t.stopPropagation(),n.first(t)}}},[n._v("首页")]),n._v(" "),n.showPrevMore?e("li",{class:["paging-item","items-center","paging-item-more"]},[n._v("...")]):n._e(),n._v(" "),n._l(n.pagers,function(t){return e("li",{class:["paging-item","items-center",{"paging-item-current":n.index===t}],on:{click:function(e){return e.stopPropagation(),n.go(t)}}},[n._v(n._s(t))])}),n._v(" "),n.showNextMore?e("li",{class:["paging-item","items-center","paging-item-more"]},[n._v("...")]):n._e(),n._v(" "),e("li",{class:["paging-item","items-center","paging-item--last",{"paging-item-disabled":n.index===n.pages},"two"],on:{click:function(t){return t.stopPropagation(),n.last(t)}}},[n._v("尾页")]),n._v(" "),e("li",{class:["paging-item","items-center","paging-item--next",{"paging-item-disabled":n.index===n.pages},"one"],on:{click:function(t){return t.stopPropagation(),n.next(t)}}},[n._v("下一页")])],2)])},[],!1,null,"0396c4c7",null).exports;function o(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=[],r=!0,i=!1,o=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done)&&(e.push(a.value),!t||e.length!==t);r=!0);}catch(n){i=!0,o=n}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return e}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var a={Page:i},s=function(n){for(var t=0,e=Object.entries(a);t<e.length;t++){var r=o(e[t],2),i=r[0],s=r[1];n.component(i,s)}};window&&window.Vue&&s(window.Vue);t.default={Page:i,install:s}}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=rz-vue-module.js.map